---
title: "Modeling Mid-term Project"
author: "Kerui Cao"
date: "11/28/2019"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo =FALSE,dpi = 500,dev = "pdf")
pacman::p_load(tidyverse,stringr,jsonlite)
```

## Data preparation Clean

\qquad I use data downloaded from Yelp website, there are four sub datasets in total, I use "Business" dataset which contains the infomation of part of businesses listed on Yelp. There are 192609 businesses in this dataset, the main steps of data preparation and clean process are:  

+ Extract restaurant information from all these businesses;
+ Extract restaurant with more than 100 reviews;
+ Delete variables with more than 40% missing value;
+ Reorganize some variables;
+ Delete observations with missing values;  

```{r}
business = stream_in(file("business.json"),verbose = FALSE)
business_flat = flatten(business)
```


```{r}
cagu = business_flat[which(str_detect(business_flat$categories,"Restaurants")),]
```


```{r}
cagu = cagu %>% filter(review_count>100)
```


```{r}
# Calculate the proportion of missing value for each variable
missing = cagu %>% apply(MARGIN = 2, function(x){round(sum(is.na(x))/length(x)*100,2)}) %>% 
  data.frame()
colnames(missing) = "Prop"

# Find variables with more than 40% missing values
missing = missing %>% mutate(feature = rownames(missing)) %>% filter(Prop > 40)
del = missing$feature

# Delete those variables
cagu = select(cagu,-del)
```

\qquad Variables "hours.Monday", "hours.Tuesday", "hours.Wednesday", "hours.Thursday", "hours.Friday", "hours.Saturday", "hours.Sunday" indicate the operational hours for each businesses, we don't need these information, so we delete these variables.  

```{r}
cagu = select(cagu,-c("hours.Monday","hours.Tuesday","hours.Wednesday","hours.Thursday",
                      "hours.Friday","hours.Saturday","hours.Sunday"))
```

\qquad Some variables whose value are list, for example, the value of variables "attributes.GoodForMeal" is ***{'dessert': False, 'latenight': False, 'lunch': True, 'dinner': True, 'brunch': False, 'breakfast': False}***, we simple re-define this variables as a numeric score by counting how many "True" contained, for the example above, the re-defined value is 2. We do the same for variables "attributes.BusinessParking" and "attributes.Ambience".  

```{r}
cagu = mutate(cagu,attributes.GoodForMeal = str_count(cagu$attributes.GoodForMeal,"True"))
cagu = mutate(cagu,attributes.BusinessParking = str_count(attributes.BusinessParking,"True"))
cagu = mutate(cagu,attributes.Ambience = str_count(attributes.Ambience,"True"))
```

\qquad For variable "categories", we can see that some restaurant contains words like "Chinese", "French" and so on, so I created new binary variables indicating those informations.  

```{r}
cagu = mutate(cagu,Chinese = ifelse(str_detect(cagu$categories,"Chinese"),1,0))
cagu = mutate(cagu,French = ifelse(str_detect(cagu$categories,"French"),1,0))
cagu = mutate(cagu,Mexican = ifelse(str_detect(cagu$categories,"Mexican"),1,0))
cagu = mutate(cagu,Italian = ifelse(str_detect(cagu$categories,"Italian"),1,0))
cagu = mutate(cagu,Indian = ifelse(str_detect(cagu$categories,"Indian"),1,0))
cagu = mutate(cagu,Japanese = ifelse(str_detect(cagu$categories,"Japanese"),1,0))
cagu = mutate(cagu,American = ifelse(str_detect(cagu$categories,"American"),1,0))
```

\qquad Some binary variables contain value "True" and "False" and "None", but only a small part of them are "None", so I simply delete them.  

```{r}
cagu = cagu %>% mutate(attributes.Caters = ifelse(cagu$attributes.Caters == 
                       "None",NA, as.character(cagu$attributes.Caters)))
cagu = cagu %>% mutate(attributes.BusinessAcceptsCreditCards = 
                         ifelse(cagu$attributes.BusinessAcceptsCreditCards == 
                       "None",NA,as.character(cagu$attributes.BusinessAcceptsCreditCards)))
```

```{r}
pat = "(?<=').*?(?=')"
cagu = cagu %>% mutate(attributes.NoiseLevel = 
                         str_extract(attributes.NoiseLevel,pattern = pat))
cagu = cagu %>% mutate(attributes.WiFi = 
                         str_extract(attributes.WiFi,pattern = pat))
cagu = cagu %>% mutate(attributes.Alcohol = 
                         str_extract(attributes.Alcohol,pattern = pat))
cagu = cagu %>% mutate(attributes.RestaurantsAttire = 
                         str_extract(attributes.RestaurantsAttire,pattern = pat))

cagu = drop_na(cagu)

cagu = mutate(cagu,
              attributes.GoodForKids = ifelse(attributes.GoodForKids=="True",1,0),
              attributes.RestaurantsReservations = ifelse(attributes.RestaurantsReservations=="True",1,0),
              attributes.Caters = ifelse(attributes.Caters=="True",1,0),
              attributes.RestaurantsTakeOut = ifelse(attributes.RestaurantsTakeOut=="True",1,0),
              attributes.OutdoorSeating = ifelse(attributes.OutdoorSeating=="True",1,0),
              attributes.BikeParking = ifelse(attributes.BikeParking=="True",1,0),
              attributes.HasTV = ifelse(attributes.HasTV=="True",1,0),
              attributes.RestaurantsGoodForGroups = ifelse(attributes.RestaurantsGoodForGroups=="True",1,0),
              attributes.RestaurantsDelivery = ifelse(attributes.RestaurantsDelivery=="True",1,0),
              attributes.BusinessAcceptsCreditCards = ifelse(attributes.BusinessAcceptsCreditCards=="True",1,0),)
cagu = mutate(cagu,attributes.RestaurantsPriceRange2 = as.numeric(attributes.RestaurantsPriceRange2 ))
```











