data.frame()
colnames(missing) = "Prop"
# Find variables with more than 40% missing values
missing = missing %>% mutate(feature = rownames(missing)) %>% filter(Prop > 40)
del = missing$feature
# Delete those variables
cagu = dplyr::select(cagu,-del)
cagu = dplyr::select(cagu,-c("hours.Monday","hours.Tuesday","hours.Wednesday","hours.Thursday",
"hours.Friday","hours.Saturday","hours.Sunday"))
cagu = mutate(cagu,attributes.GoodForMeal = str_count(cagu$attributes.GoodForMeal,"True"))
cagu = mutate(cagu,attributes.BusinessParking = str_count(attributes.BusinessParking,"True"))
cagu = mutate(cagu,attributes.Ambience = str_count(attributes.Ambience,"True"))
cagu = mutate(cagu,Chinese = ifelse(str_detect(cagu$categories,"Chinese"),1,0))
cagu = mutate(cagu,French = ifelse(str_detect(cagu$categories,"French"),1,0))
cagu = mutate(cagu,Mexican = ifelse(str_detect(cagu$categories,"Mexican"),1,0))
cagu = mutate(cagu,Italian = ifelse(str_detect(cagu$categories,"Italian"),1,0))
cagu = mutate(cagu,Indian = ifelse(str_detect(cagu$categories,"Indian"),1,0))
cagu = mutate(cagu,Japanese = ifelse(str_detect(cagu$categories,"Japanese"),1,0))
cagu = mutate(cagu,American = ifelse(str_detect(cagu$categories,"American"),1,0))
cagu = cagu %>% mutate(attributes.Caters = ifelse(cagu$attributes.Caters ==
"None",NA, as.character(cagu$attributes.Caters)))
cagu = cagu %>% mutate(attributes.BusinessAcceptsCreditCards =
ifelse(cagu$attributes.BusinessAcceptsCreditCards ==
"None",NA,as.character(cagu$attributes.BusinessAcceptsCreditCards)))
pat = "(?<=').*?(?=')"
cagu = cagu %>% mutate(attributes.NoiseLevel =
str_extract(attributes.NoiseLevel,pattern = pat))
cagu = cagu %>% mutate(attributes.WiFi =
str_extract(attributes.WiFi,pattern = pat))
cagu = cagu %>% mutate(attributes.Alcohol =
str_extract(attributes.Alcohol,pattern = pat))
cagu = cagu %>% mutate(attributes.RestaurantsAttire =
str_extract(attributes.RestaurantsAttire,pattern = pat))
cagu = drop_na(cagu)
cagu = mutate(cagu,
attributes.GoodForKids = ifelse(attributes.GoodForKids=="True",1,0),
attributes.RestaurantsReservations = ifelse(attributes.RestaurantsReservations=="True",1,0),
attributes.Caters = ifelse(attributes.Caters=="True",1,0),
attributes.RestaurantsTakeOut = ifelse(attributes.RestaurantsTakeOut=="True",1,0),
attributes.OutdoorSeating = ifelse(attributes.OutdoorSeating=="True",1,0),
attributes.BikeParking = ifelse(attributes.BikeParking=="True",1,0),
attributes.HasTV = ifelse(attributes.HasTV=="True",1,0),
attributes.RestaurantsGoodForGroups = ifelse(attributes.RestaurantsGoodForGroups=="True",1,0),
attributes.RestaurantsDelivery = ifelse(attributes.RestaurantsDelivery=="True",1,0),
attributes.BusinessAcceptsCreditCards = ifelse(attributes.BusinessAcceptsCreditCards=="True",1,0),)
cagu = mutate(cagu,attributes.RestaurantsPriceRange2 = as.numeric(attributes.RestaurantsPriceRange2 ))
city.list = cagu %>% count(city) %>% arrange(desc(n)) %>% filter(n>178)
cagu = cagu[which(cagu$city %in% city.list$city),]
imi = read.csv("imigrates.csv")
imi.c = imi %>% filter(`Origin..tooltip.` == c("China:","France","Mexico","Italy","India","Japan"))
imi.c = imi.c %>% droplevels()
imi.c = imi.c %>% mutate(MSA = str_extract(imi.c$MSA,pattern = ", \\w*") %>% gsub(pattern = ", ",replacement = ""),
`Origin..tooltip.` = gsub(imi.c$`Origin..tooltip.`,pattern = ":",replacement = ""))
imi.f = imi.c %>% dplyr::select("Ã¯..Round.total.MSA.population","Immigrants","MSA","Origin..tooltip.")
names(imi.f) = c("Total.Population","Immigrants","MSA","Origin")
tot = imi.f %>% group_by(MSA) %>% summarise(tot = sum(Total.Population,na.rm = T))
imi = imi.f %>% group_by(MSA,Origin) %>% summarise(imi = sum(Immigrants)) %>% pivot_wider(names_from = Origin,values_from = imi)
imi = impute(imi,0)
imi = inner_join(imi,tot,by = "MSA")
imi = imi %>% mutate(China.p = China/tot,
India.p = India/tot,
Italy.p = Italy/tot,
Japan.p = Japan/tot,
France.p = France/tot,
Mexico.p = Mexico/tot) %>% dplyr::select(-c(tot,China,India,Italy,Japan,France,Mexico))
cagu.h = left_join(x = cagu,y = imi,by = c("state" = "MSA")) %>% drop_na()
a = cagu.h %>% group_by(city) %>% summarise(average = mean(stars),
max = max(stars),
min = min(stars)) %>% mutate(id = 1:length(min))
a1 = ggplot(a) + geom_pointrange(aes(x = id,y = average,ymin = min,ymax = max))+
scale_x_discrete(breaks = NULL) + xlab("City")
a2 = ggplot(cagu.h) +
aes(x = stars, fill = city) +
geom_density(adjust = 1L,alpha = 0.2) +
scale_fill_hue() +
theme(legend.position = "")+ xlab("Star Rating")
a3 = ggplot(cagu.h)+geom_violin(aes(y = stars,x = city))+ scale_x_discrete(breaks = NULL)+ xlab("City")
gridExtra::grid.arrange(gridExtra::arrangeGrob(a1,a3,nrow = 1),a2,ncol = 1)
cagu.las = cagu.h %>% filter(city == "Las Vegas")
zip.list = cagu.las %>% count(postal_code) %>% arrange(desc(n)) %>% filter(n > 30)
colnames(zip.list) = c("Zip.Code","Num of Restaurant")
kableExtra::kable(zip.list[1:10,],booktabs = T,caption = "List of districts",align = "c",format = 'latex') %>%
kableExtra::kable_styling(font_size = 8,bootstrap_options =
c('striped','hover','condensed',"responsive"),latex_options = "HOLD_position")
a.las = cagu.las %>% group_by(postal_code) %>% summarise(average = mean(stars),
max = max(stars),
min = min(stars)) %>% mutate(id = 1:length(min))
a1 = ggplot(a.las) + geom_pointrange(aes(x = id,y = average,ymin = min,ymax = max))+
scale_x_discrete(breaks = NULL) + xlab("Districts")
a2 = ggplot(cagu.las) +
aes(x = stars, fill = postal_code) +
geom_density(adjust = 1L,alpha = 0.2) +
scale_fill_hue() +
theme(legend.position = "")+ xlab("Star Rating")
a3 = ggplot(cagu.las)+geom_boxplot(aes(y = stars,x = postal_code))+ scale_x_discrete(breaks = NULL)+ xlab("postal_code")
gridExtra::grid.arrange(gridExtra::arrangeGrob(a1,a3,nrow = 1),a2,ncol = 1)
ggplot(cagu.las) +
aes(x = stars,fill = city,color = postal_code) +
geom_density(adjust = 1L,alpha = 0.1) +
scale_fill_hue() + facet_grid(rows = vars(attributes.NoiseLevel),scales = "free_y") + theme(legend.position = "")
ggplot(cagu.h) +
aes(x = stars) +
geom_density(adjust = 1L,alpha = 0.5,fill = 'black',color = "white") +
scale_fill_hue() + facet_grid(cols = vars(attributes.RestaurantsPriceRange2),)
ggplot(cagu.las) +
aes(x = stars,fill = city,color = postal_code) +
geom_density(adjust = 1L,alpha = 0.1) +
scale_fill_hue() + facet_grid(rows = vars(Chinese),scales = "free_y") + theme(legend.position = "")
a = cagu.h%>%filter(Chinese==1)
b = a %>% group_by(as.factor(China.p)) %>% summarise(mean = mean(stars))
fu = function(x){
im = as.numeric(b[which(b$`as.factor(China.p)`==x),2])
return(im)
}
ggplot(a)+geom_violin(aes(x = factor(China.p),y = stars)) +scale_x_discrete(breaks = NULL) + xlab("Proportion of Chinese")
ggplot(cagu.h) +
aes(x = attributes.NoiseLevel) +
geom_histogram(adjust = 1L,stat="count",) +
scale_fill_hue() + facet_grid(rows = vars(Chinese),scales = "free_y") + theme(legend.position = "")
cagu.data = cagu.h %>% dplyr::select(stars,city,names(cagu.h)[13:43])
fit1 = lm(data = cagu.data,scale(stars) ~ attributes.GoodForKids+
attributes.RestaurantsReservations+
attributes.GoodForMeal+
attributes.BusinessParking+
attributes.Caters+
attributes.NoiseLevel+
attributes.RestaurantsTakeOut+
attributes.RestaurantsPriceRange2+
attributes.OutdoorSeating+
attributes.BikeParking+
attributes.Ambience+
attributes.HasTV+
attributes.WiFi+
attributes.Alcohol+
attributes.RestaurantsAttire+
attributes.RestaurantsGoodForGroups+
attributes.RestaurantsDelivery+
attributes.BusinessAcceptsCreditCards+
Chinese+French+Mexican+Italian+Indian+Japanese+
Chinese:China.p+French:France.p+Mexican:Mexico.p+
Italian:Italy.p+Indian:India.p+Japanese:Japan.p)
step = stepAIC(fit1, direction="both",trace = 0)
car::qqPlot(fit1$residuals, id = F)
lm.i = lm(data = cagu.data,scale(stars) ~ attributes.GoodForKids + attributes.RestaurantsReservations +
attributes.GoodForMeal + attributes.BusinessParking + attributes.Caters +
attributes.NoiseLevel + attributes.BikeParking + attributes.Ambience +
attributes.WiFi + attributes.Alcohol + attributes.RestaurantsAttire +
attributes.RestaurantsGoodForGroups + Chinese + French +
Italian + Japanese + Italian:Italy.p + Japanese:Japan.p,family = gaussian())
summary(lm.i)
car::qqPlot(lm.i$residuals, id = F)
mo.b  = stan_glm(data = cagu.data,scale(stars) ~ attributes.GoodForKids + attributes.RestaurantsReservations +
attributes.GoodForMeal + attributes.BusinessParking + attributes.Caters +
attributes.NoiseLevel + attributes.BikeParking + attributes.Ambience +
attributes.WiFi + attributes.Alcohol + attributes.RestaurantsAttire +
attributes.RestaurantsGoodForGroups + Chinese:China.p + French:France.p +
Italian:Italy.p,family = gaussian())
rstanarm::pp_check(mo.b)
# mo.mn = polr(data = cagu.data,factor(stars) ~ attributes.GoodForKids+
#             attributes.RestaurantsReservations+
#             attributes.GoodForMeal+
#             attributes.BusinessParking+
#             attributes.Caters+
#             attributes.NoiseLevel+
#             attributes.RestaurantsTakeOut+
#             attributes.RestaurantsPriceRange2+
#             attributes.OutdoorSeating+
#             attributes.BikeParking+
#             attributes.Ambience+
#             attributes.HasTV+
#             attributes.WiFi+
#             attributes.Alcohol+
#             attributes.RestaurantsAttire+
#             attributes.RestaurantsGoodForGroups+
#             attributes.RestaurantsDelivery+
#             attributes.BusinessAcceptsCreditCards+
#             Chinese+French+Mexican+Italian+Indian+Japanese+
#             Chinese:China.p+French:France.p+Mexican:Mexico.p+
#             Italian:Italy.p+Indian:India.p+Japanese:Japan.p)
# step = stepAIC(mo.mn,trace = 0)
mo.mn = polr(data = cagu.data,factor(stars) ~ attributes.GoodForKids + attributes.RestaurantsReservations +
attributes.GoodForMeal + attributes.BusinessParking + attributes.Caters +
attributes.NoiseLevel + attributes.BikeParking + attributes.Ambience +
attributes.WiFi + attributes.Alcohol + attributes.RestaurantsGoodForGroups +
Chinese + French + Italian + Japanese + Italian:Italy.p)
summary(mo.mn)
pred = predict(mo.mn)
re = data.frame("original" = cagu.data$stars,"predict" = as.numeric(as.character(pred))) %>% pivot_longer(cols = 1:2,names_to = "type", values_to = "value")
ggplot(re) + geom_density(aes(x = value, fill = type),alpha = 0.4)
library(brms)
cagu.las$stars =  factor(cagu.las$stars,ordered = T)
mo.mm = brm(data = cagu.las, stars ~  attributes.GoodForKids + attributes.RestaurantsReservations +
attributes.GoodForMeal + attributes.BusinessParking + attributes.Caters +
attributes.NoiseLevel + attributes.BikeParking + attributes.Ambience +
attributes.WiFi + attributes.Alcohol + attributes.RestaurantsGoodForGroups +
Chinese + French + Italian + Japanese + (1|postal_code),family = acat("logit"),
prior = set_prior("normal(0,5)"))
mo.mm.fit = mo.mm$fit
knitr::opts_chunk$set(echo =FALSE,dpi = 500,dev = "pdf",fig.height = 3,message=FALSE, warning=FALSE)
pacman::p_load(tidyverse,stringr,jsonlite,Hmisc,MASS,compositions,rstanarm,baysplot,rstan)
knitr::opts_chunk$set(echo =FALSE,dpi = 500,dev = "pdf",fig.height = 3,message=FALSE, warning=FALSE)
pacman::p_load(tidyverse,stringr,jsonlite,Hmisc,MASS,compositions,rstanarm,bayesplot,rstan)
mcmc_intervals(mo.mm.fit)
mo.mm.fit = mo.mm$fit
mcmc_intervals(mo.mm.fit)
pp_check()
monitor(mo.mm.fit)
mcmc_trace(mo.mm.fit)
mcmc_acf(mo.mm.fit)
mcmc_hist(mo.mm.fit)
mo.mm.fit = mo.mm$fit
monitor(mo.mm.fit)
mcmc_hist(mo.mm.fit)
View(mo.mm.fit)
mo.mm.fit[,,1]
str(mo.mm.fit)
mo.mm.fit@sim$samples
mo.mm.fit = mo.mm$fit@sim$samples
View(mo.mm.fit)
dim(mo.mm.fit)
mo.mm.fit[1]
mo.mm.fit[,,1]
View(mo.mm.fit)
extract(mo.mm)
extract(mo.mm$fit)
fit.bay = extract(mo.mm$fit)
View(fit.bay)
pp_check(mo.mm)
pp_check(mo.mm,nsamples = 1000)
fit.bay$b
View(mo.mm.fit)
mo.mm.fit[1][8:27]
mo.mm.fit[1]
monitor(mo.mm)
monitor(mo.mm.fit)
monitor(mo.mm.fit)
mo.mm.fit = mo.mm$fit
monitor(mo.mm.fit)
monitor(mo.mm.fit,probs = c(0.025,0.5,0.975),j = 8:27)
View(mo.mm.fit)
monitor(mo.mm.fit,probs = c(0.025,0.5,0.975),i = 8:27)
view(cagu.las%>%count(postal_code))
View(zip.list)
cagu.las = cagu.las[which(cagu.las$postal_code %in% zip.list$Zip.Code),]
cagu.las$stars =  factor(cagu.las$stars,ordered = T)
mo.mm = brm(data = cagu.las, stars ~  attributes.GoodForKids + attributes.RestaurantsReservations +
attributes.GoodForMeal + attributes.BusinessParking + attributes.Caters +
attributes.NoiseLevel + attributes.BikeParking + attributes.Ambience +
attributes.WiFi + attributes.Alcohol + attributes.RestaurantsGoodForGroups +
Chinese + French + Italian + Japanese + (1|postal_code),family = acat("logit"),
prior = set_prior("normal(0,5)"))
mo.mm.fit = mo.mm$fit
monitor(mo.mm.fit)
mo.mm.fit = mo.mm$fit@sim
View(mo.mm.fit)
mo.mm.fit = mo.mm$fit@sim$samples
View(mo.mm.fit)
dim(mo.mm.fit[1])
class
class(mo.mm.fit[1])
mo.mm.fit[1][1]
sim = mo.mm.fit[1:4][8:27]
View(sim)
mo.mm.fit[1:4][8:27]
mo.mm.fit[1][8:27]
mo.mm.fit[1][8]
mo.mm.fit[1][1]
mo.mm.fit[1][1:2]
mo.mm.fit[1][1]
mo.mm.fit[[1]]
sim = mo.mm.fit[[1]][[8:27]]
sim = mo.mm.fit[[1]][[8]]
sim = mo.mm.fit[[1]][[8:9]]
extract(mo.mm)
extract(mo.mm$fit)
sim = extract(mo.mm$fit)
View(sim)
sim = extract(mo.mm$fit)$b
View(sim)
mcmc_intervals(sim)
sim = extract(mo.mm$fit)
mcmc_intervals(sim)
monitor(sims)
monitor(sim)
mo.mm.fit = mo.mm$fit
monitor(mo.mm.fit)
monitor(mo.mm.fit,probs = c(0.025,0.5,0.975),i = 8:27)
mo.mm.fit = mo.mm$fit
monitor(mo.mm.fit)
monitor(mo.mm.fit,probs = c(0.025,0.5,0.975),i = 8:27)
# mcmc_hist(mo.mm.fit)
# pp_check(mo.mm,nsamples = 100)
mo.mm$cov_ranef
mo.mm$ranef
sim = posterior_samples(x = mo.mm,pars = "attributes\\W*")
library(brms)
cagu.las = cagu.las[which(cagu.las$postal_code %in% zip.list$Zip.Code),]
cagu.las$stars =  factor(cagu.las$stars,ordered = T)
mo.mm = brm(data = cagu.las, stars ~  attributes.GoodForKids + attributes.RestaurantsReservations +
attributes.GoodForMeal + attributes.BusinessParking + attributes.Caters +
attributes.NoiseLevel + attributes.BikeParking + attributes.Ambience +
attributes.WiFi + attributes.Alcohol + attributes.RestaurantsGoodForGroups +
Chinese + French + Italian + Japanese + (1|postal_code),family = acat("logit"),
prior = set_prior("normal(0,5)"),cores = 4)
summary(mo.mm)
summary(mo.mm)
knitr::opts_chunk$set(echo =FALSE,dpi = 500,dev = "pdf",fig.height = 3,message=FALSE, warning=FALSE)
pacman::p_load(tidyverse,stringr,jsonlite,Hmisc,MASS,compositions,rstanarm,bayesplot,rstan)
mo.mm.fit = mo.mm$fit
summary(mo.mm)
unique(cagu.data$stars)
pp_check(mo.mm,nsamples = 100)
pred = predict(mo.mm)
view(pred)
kableExtra::kable(pred[1:10,],booktabs = T,caption = "Prediction",align = "c") %>%
kableExtra::kable_styling(font_size = 8,bootstrap_options =
c('striped','hover','condensed',"responsive"),latex_options = "HOLD_position")
pp_check(mo.mm,nsamples = 100)
cho = matrix(data = c(1.5,2,2.5,3,3.5,4,4.5,5),nrow = 1)
View(cho)
cho = matrix(data = c(1.5,2,2.5,3,3.5,4,4.5,5),nrow= 1)
View(cho)
cho = matrix(data = c(1.5,2,2.5,3,3.5,4,4.5,5),nrow= 1)
View(cho)
cho = matrix(score = c(1.5,2,2.5,3,3.5,4,4.5,5))
cho = matrix(data = c(1.5,2,2.5,3,3.5,4,4.5,5),ncol= 1)
View(pred)
latent = pred %*% cho
View(latent)
che = data.frame(obs = cagu.data$stars, lat = latent)
che = data.frame(obs = cagu.las$stars, lat = latent)
View(che)
che = data.frame(obs = cagu.las$stars, lat = latent) %>% pivot_longer(cols = 1:2,names_to = "type",values_to = "value")
che = NULL
che = data.frame(obs = cagu.las$stars, lat = latent) %>% pivot_longer(cols = 1:2,names_to = "type",values_to = "value")
cho = matrix(data = c(1.5,2,2.5,3,3.5,4,4.5,5),ncol= 1)
latent = pred %*% cho
che = data.frame(obs = cagu.las$stars, lat = latent) %>% pivot_longer(cols = 1:2,names_to = "type",values_to = "value")
che = data.frame(obs = cagu.las$stars, lat = latent) #%>% pivot_longer(cols = 1:2,names_to = "type",values_to = "value")
cho = matrix(data = c(1.5,2,2.5,3,3.5,4,4.5,5),ncol= 1)
latent = pred %*% cho
che = data.frame(obs = cagu.las$stars, lat = latent) #%>% pivot_longer(cols = 1:2,names_to = "type",values_to = "value")
che = data.frame(obs = cagu.las$stars, lat = latent) #%>% pivot_longer(cols = 1:2,names_to = "type",values_to = "value")
View(che)
str(che)
che = data.frame(obs = as.numeric(as.character(cagu.las$stars)), lat = latent) %>% pivot_longer(cols = 1:2,names_to = "type",values_to = "value")
ggplot(che) + geom_density(aes(y = value,fill = type),alpha = 0.2)
ggplot(che) + geom_density(aes(x = value,fill = type),alpha = 0.2)
cho = matrix(data = c(1.5,2,2.5,3,3.5,4,4.5,5),ncol= 1)
latent = pred %*% cho
che = data.frame(observation = as.numeric(as.character(cagu.las$stars)), latent = latent) %>% pivot_longer(cols = 1:2,names_to = "type",values_to = "value")
ggplot(che) + geom_density(aes(x = value,fill = type),alpha = 0.2)
car::qqPlot(latent)
car::qqPlot(log(latent))
car::qqPlot(log(latent))
car::qqPlot(exp(latent))
car::qqPlot(scale(latent))
car::qqPlot(latent)
cagu.lat = cagu.las %>% mutate(lat = latent)
View(cagu.lat)
names(cagu.lat)[13:37]
cagu.lat = cagu.las %>% mutate(lat = latent)
cagu.lat = cagu.lat %>% dplyr::select(latitude,longitude,names(cagu.lat)[13:37],lat)
cagu.lat = cagu.las %>% mutate(lat = latent)
cagu.lat = cagu.lat %>% dplyr::select(latitude,longitude,postal_code,names(cagu.lat)[13:37],lat)
View(cagu.lat)
fit = lmer(data = cagu.las, stars ~  attributes.GoodForKids + attributes.RestaurantsReservations + attributes.GoodForMeal + attributes.BusinessParking + attributes.Caters + attributes.NoiseLevel + attributes.BikeParking + attributes.Ambience + attributes.WiFi + attributes.Alcohol + attributes.RestaurantsGoodForGroups + Chinese + French + Italian + Japanese + (1|postal_code))
fit = lme4::lmer(data = cagu.las, stars ~  attributes.GoodForKids + attributes.RestaurantsReservations + attributes.GoodForMeal + attributes.BusinessParking + attributes.Caters + attributes.NoiseLevel + attributes.BikeParking + attributes.Ambience + attributes.WiFi + attributes.Alcohol + attributes.RestaurantsGoodForGroups + Chinese + French + Italian + Japanese + (1|postal_code))
fit = lme4::lmer(data = cagu.lat, latent ~  attributes.GoodForKids + attributes.RestaurantsReservations + attributes.GoodForMeal + attributes.BusinessParking + attributes.Caters + attributes.NoiseLevel + attributes.BikeParking + attributes.Ambience + attributes.WiFi + attributes.Alcohol + attributes.RestaurantsGoodForGroups + Chinese + French + Italian + Japanese + (1|postal_code))
summary(fit)
display(fit)
arm::display(fit)
exactRLRT(fit)
library(RLRsim)
knitr::opts_chunk$set(echo =FALSE,dpi = 500,dev = "pdf",fig.height = 3,message=FALSE, warning=FALSE)
pacman::p_load(tidyverse,stringr,jsonlite,Hmisc,MASS,compositions,rstanarm,bayesplot,rstan,RLRsim)
exactRLRT(fit)
fixcoef(fit)
ranef(fit)
coef(fit)
=red = predict(fit)
pred = predict(fit)
pred
red = predict(fit) - cagu.lat$lat
red
red = round(predict(fit) - cagu.lat$lat,2)
red
red = round(predict(fit) - cagu.lat$lat,3)
red
red = (red-min(red))/(max(red)-min(red))
red
red = predict(fit) - cagu.lat$lat
red = (red-min(red))/(max(red)-min(red))
red
kableExtra::kable(red[1:10,],booktabs = T,caption = "Residuals: New \"star\"",align = "c") %>%
kableExtra::kable_styling(font_size = 8,bootstrap_options =
c('striped','hover','condensed',"responsive"),latex_options = "HOLD_position")
red = cut(red,breaks = 8)
red
red = (red-min(red))/(max(red)-min(red))
red = predict(fit) - cagu.lat$lat
red = (red-min(red))/(max(red)-min(red))
red = cut(red,breaks = 8,ordered_result = T,labels = F)
red
unique(red)
red = (red+2)/2
red
unique(red)
View(cagu.las)
cops = data.frame(old = cagu.las$stars, new = red)
View(cops)
cops = data.frame(old = cagu.las$stars, new = red,restaurant = cagu.las$name)
cops = data.frame(restaurant = cagu.las$name,old = cagu.las$stars, new = red)
kableExtra::kable(cops[1:10,],booktabs = T,caption = "Comparison of old & new \"star\"",align = "c") %>%
kableExtra::kable_styling(font_size = 8,bootstrap_options =
c('striped','hover','condensed',"responsive"),latex_options = "HOLD_position")
View(cops)
dif = with(cops,ifelse(old > new,1,0))
cagu.lat = cagu.lat %>% mutate(dif = dif)
View(cagu.lat)
View(cagu.lat)
names(cagu.lat)
pplot(cagu.lat) + geom_density(aes(x = attributes.NoiseLevel, fill = dif),alpha = 0.3)
gglot(cagu.lat) + geom_density(aes(x = attributes.NoiseLevel, fill = dif),alpha = 0.3)
ggplot(cagu.lat) + geom_density(aes(x = attributes.NoiseLevel, fill = dif),alpha = 0.3)
ggplot(cagu.lat) + geom_density(aes(x = attributes.NoiseLevel, fill = factor(dif)),alpha = 0.3)
ggplot(cagu.lat) + geom_density(aes(x = factor(attributes.NoiseLevel), fill = factor(dif)),alpha = 0.3)
ggplot(cagu.lat) + geom_histogram(aes(x = factor(attributes.NoiseLevel), fill = factor(dif)),alpha = 0.3)
ggplot(cagu.lat) + geom_histogram(aes(x = factor(attributes.NoiseLevel),stat="count", fill = factor(dif)),alpha = 0.3)
ggplot(cagu.lat) + geom_histogram(aes(x = attributes.NoiseLevel,stat="count", fill = factor(dif)),alpha = 0.3)
ggplot(cagu.lat) + geom_histogram(aes(x = attributes.NoiseLevel,stat="count", fill = factor(dif)),alpha = 0.3)
cagu.lat %>% count(attributes.NoiseLevel,dif)
pl = cagu.lat %>% count(attributes.NoiseLevel,dif)
esquisse::esquisser(pl)
dif = with(cops,ifelse(old > new,1,0))
cagu.lat = cagu.lat %>% mutate(dif = dif)
pl = cagu.lat %>% count(attributes.NoiseLevel,dif)
pl <- pl %>%
filter(!(attributes.NoiseLevel %in% "average"))
ggplot(pl) +
aes(x = attributes.NoiseLevel, weight = n) +
geom_bar(fill = "#0c4c8a") +
facet_wrap(vars(dif), scales = "free")
dif = with(cops,ifelse(old > new,1,0))
cagu.lat = cagu.lat %>% mutate(dif = dif)
pl = cagu.lat %>% count(attributes.NoiseLevel,dif)
pl <- pl %>%
filter(!(attributes.NoiseLevel %in% "average"))
ggplot(pl) +
aes(x = attributes.NoiseLevel, weight = n) +
geom_bar(fill = "#0c4c8a") +
facet_wrap(vars(dif), scales = "free",labeller = list("0" = "Increased Star","1" = "Decreased Star"))
dif = with(cops,ifelse(old > new,1,0))
cagu.lat = cagu.lat %>% mutate(dif = dif)
pl = cagu.lat %>% count(attributes.NoiseLevel,dif)
pl <- pl %>%
filter(!(attributes.NoiseLevel %in% "average"))
ggplot(pl) +
aes(x = attributes.NoiseLevel, weight = n) +
geom_bar(fill = "#0c4c8a") +
facet_wrap(vars(dif), scales = "free",labeller = list(0 = "Increased Star",1 = "Decreased Star"))
dif = with(cops,ifelse(old > new,1,0))
cagu.lat = cagu.lat %>% mutate(dif = dif)
pl = cagu.lat %>% count(attributes.NoiseLevel,dif)
pl <- pl %>%
filter(!(attributes.NoiseLevel %in% "average"))
ggplot(pl) +
aes(x = attributes.NoiseLevel, weight = n) +
geom_bar(fill = "#0c4c8a") +
facet_wrap(vars(dif), scales = "free",labeller = list('0' = "Increased Star","1" = "Decreased Star"))
dif = with(cops,ifelse(old > new,"Decreased Star","Increased Star"))
cagu.lat = cagu.lat %>% mutate(dif = dif)
pl = cagu.lat %>% count(attributes.NoiseLevel,dif)
pl <- pl %>%
filter(!(attributes.NoiseLevel %in% "average"))
ggplot(pl) +
aes(x = attributes.NoiseLevel, weight = n) +
geom_bar(fill = "#0c4c8a") +
facet_wrap(vars(dif), scales = "free")
dif = with(cops,ifelse(old > new,"Decreased Star","Increased Star"))
cagu.lat = cagu.lat %>% mutate(dif = dif)
pl = cagu.lat %>% count(attributes.NoiseLevel,dif)
View(pl)
cagu.lat = cagu.lat %>% mutate(dif = dif)
View(cagu.lat)
cagu.lat = cagu.lat %>% dplyr::select(-dif)
cagu.lat = cagu.lat %>% mutate(dif = dif)
pl = cagu.lat %>% count(attributes.NoiseLevel,dif)
View(pl)
dif = with(cops,ifelse(old > new,"Decreased Star","Increased Star"))
cagu.lat = cagu.lat %>% mutate(dif = dif)
pl = cagu.lat %>% count(attributes.NoiseLevel,dif)
pl <- pl %>%
filter(!(attributes.NoiseLevel %in% "average"))
ggplot(pl) +
aes(x = attributes.NoiseLevel, weight = n) +
geom_bar(fill = "#0c4c8a") +
facet_wrap(vars(dif), scales = "free")
unique(cagu.lat$attributes.Ambience)
unique(cagu.lat$attributes.RestaurantsReservations)
dif = with(cops,ifelse(old > new,"Decreased Star","Increased Star"))
cagu.lat = cagu.lat %>% mutate(dif = dif)
pl = cagu.lat %>% count(attributes.RestaurantsReservations,dif)
ggplot(pl) +
aes(x = attributes.RestaurantsReservations, weight = n) +
geom_bar(fill = "#0c4c8a") +
facet_wrap(vars(dif), scales = "free")
knitr::opts_chunk$set(echo =FALSE,dpi = 500,dev = "pdf",fig.height = 3,message=FALSE, warning=FALSE)
pacman::p_load(tidyverse,stringr,jsonlite,Hmisc,MASS,compositions,rstanarm,bayesplot,rstan,RLRsim)
kableExtra::kable(cops[1:10,],booktabs = T,caption = "Comparison of old & new star",align = "c",format = 'latex') %>%
kableExtra::kable_styling(font_size = 8,bootstrap_options =
c('striped','hover','condensed',"responsive"),latex_options = "HOLD_position")
